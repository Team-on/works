<ResourceDictionary 
    x:Class="Whush.Demo.Styles.CustomizedWindow.VS2012WindowStyle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#2d2d30" />
	
    <SolidColorBrush x:Key="VS2012WindowBorderBrush" Color="#007ACC" />
    <SolidColorBrush x:Key="VS2012WindowBorderBrushInactive" Color="#999999" />
	
    <SolidColorBrush x:Key="VS2012WindowStatusForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="VS2012WindowStatusForegroundInactive" Color="#FFFFFF" />
	
	<SolidColorBrush x:Key="VS2012WindowMenuForeground" Color="White" />
	<SolidColorBrush x:Key="VS2012WindowMenuBackground" Color="#2d2d30" />

	<SolidColorBrush x:Key="VS2012WindowButtonForeground" Color="White" />
	<SolidColorBrush x:Key="VS2012WindowButtonBackground" Color="#2d2d30" />
	<SolidColorBrush x:Key="VS2012WindowButtonBorderActive" Color="#007ACC" />
	<SolidColorBrush x:Key="VS2012WindowButtonBorderInActive" Color="#999999" />

	<Style x:Key="VS2012WindowStandartButton" TargetType="{x:Type Button}">
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontFamily" Value="Comic Sans MS" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border
                            x:Name="PART_border"
                            Background="Transparent"
							BorderBrush="{StaticResource VS2012WindowButtonBorderInActive}"
							BorderThickness="2"
                            />
						<ContentPresenter />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowButtonBackground}" />
							<Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
							<Setter TargetName="PART_border" Property="BorderBrush" Value="{StaticResource VS2012WindowButtonBorderActive}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowBorderBrush}"/>
							<Setter TargetName="PART_border" Property="Opacity" Value="1" />
							<Setter Property="Foreground" Value="#FFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="VS2012WindowComboBox" TargetType="{x:Type ComboBox}">
		<Setter Property="Background" Value="#3f3f46" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="Margin" Value="0 1 0 1" />

		<Style.Resources>
			<Style TargetType="{x:Type ComboBoxItem}">
				<Setter Property="Background" Value="#1b1b1c" />
				<Setter Property="Foreground" Value="White" />
			</Style>
		</Style.Resources>

		<Style.Triggers>
			<Trigger Property="IsSelectionBoxHighlighted"
                        Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource VS2012WindowButtonBorderActive}" />
			</Trigger>
			<Trigger Property="IsSelectionBoxHighlighted"
                        Value="False">
				<Setter Property="BorderBrush" Value="{StaticResource VS2012WindowButtonBorderInActive}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="VS2012WindowTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="Background" Value="#3f3f46" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="TextWrapping" Value="Wrap" />


		<Style.Triggers>
			<Trigger Property="IsFocused"
                        Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource VS2012WindowButtonBorderActive}" />
			</Trigger>
			<Trigger Property="IsFocused"
                        Value="False">
				<Setter Property="BorderBrush" Value="{StaticResource VS2012WindowButtonBorderInActive}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="VS2012WindowWrapPanel" TargetType="{x:Type WrapPanel}">
		<Style.Resources>
			<Style TargetType="{x:Type Button}">
				<Setter Property="Focusable" Value="false" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="FontFamily" Value="Comic Sans MS" />
				<Setter Property="Margin" Value="4 4 4 4" />
				<Setter Property="Height" Value="50" />

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Border
                            x:Name="PART_border"
                            Background="Transparent"
							BorderBrush="{StaticResource VS2012WindowButtonBorderInActive}"
							BorderThickness="2"
                            />
								<ContentPresenter />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowButtonBackground}" />
									<Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
									<Setter TargetName="PART_border" Property="BorderBrush" Value="{StaticResource VS2012WindowButtonBorderActive}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowBorderBrush}"/>
									<Setter TargetName="PART_border" Property="Opacity" Value="1" />
									<Setter Property="Foreground" Value="#FFF"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style TargetType="{x:Type Label}">
				<Setter Property="Focusable" Value="false" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="FontFamily" Value="Comic Sans MS" />

			</Style>
		</Style.Resources>
	</Style>

	<Style x:Key="VS2012WindowStyleTitleBarButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent"
                            />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_border" Property="Background" Value="#3f3f41" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource VS2012WindowBorderBrush}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="VS2012WindowStyle" TargetType="{x:Type Window}">
		<Setter Property="AllowsTransparency" Value="true" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="ResizeMode" Value="CanResizeWithGrip" />
		<Setter Property="Foreground" Value="White" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<!--
                    7 is a magic number. By default Windows fits a maximized window with Margin
                    7 7 7 7 to fill entire screen (WPF .Net 4.5). Larger numbers produce a gap
                    between maximized window and screen edges; smaller numbers show parts of
                    the window outside of the current monitor on multi-display computers.
                    -->
					<Grid
                        Margin="7"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
						<Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="#1e1e1e"
                            BorderBrush="{StaticResource VS2012WindowBorderBrush}"
                            BorderThickness="1"
                            Padding="0">
							<Border.Effect>
								<DropShadowEffect
                                    Color="black"
                                    Opacity="0.5"
                                    BlurRadius="7"
                                    ShadowDepth="2"
                                    Direction="315"/>
							</Border.Effect>
							<DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch"
                                >
								<Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{StaticResource TitleBarBackgroundBrush}"
                                    BorderThickness="0"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove"
                                    >
									<Grid Height="32">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="36"/>
											<ColumnDefinition />
											<ColumnDefinition Width="34"/>
											<ColumnDefinition Width="34"/>
											<ColumnDefinition Width="34"/>
										</Grid.ColumnDefinitions>
										<Image
                                            x:Name="Icon"
                                            Grid.Column="0"
                                            Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            HorizontalAlignment="Right"
                                            Margin="4,-7,0,7"
                                            Width="32"
                                            Height="32"
                                            MouseLeftButtonDown="IconMouseLeftButtonDown"
                                            />
										<TextBlock
                                            x:Name="Caption"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="4,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Opacity="0.66"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            />
										<Button
                                            x:Name="MinButton" 
                                            Grid.Column="2"
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="MinButtonClick"
                                            >
											<Grid MaxHeight="9" MaxWidth="9">
												<Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                    />
											</Grid>
										</Button>
										<Button
                                            Grid.Column="3"
                                            x:Name="MaxButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="MaxButtonClick"
                                            >
											<Grid MaxHeight="9" MaxWidth="9">
												<Path
                                                    x:Name="PART_MaxButton_Path"
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"
                                                    />
											</Grid>
										</Button>
										<Button
                                            Grid.Column="4"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource VS2012WindowStyleTitleBarButton}"
                                            Click="CloseButtonClick"
                                            >
											<Grid MaxHeight="9" MaxWidth="9">
												<Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"
                                                    />
											</Grid>
										</Button>
									</Grid>
								</Border>
								<ContentPresenter />
							</DockPanel>
						</Border>
						<Line
                            MouseDown="OnSizeNorth"
                            x:Name="lnSizeNorth"
                            Stroke="Transparent"   
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="1"
                            StrokeThickness="3"
                            />
						<Line
                            MouseDown="OnSizeSouth"
                            x:Name="lnSizeSouth"
                            Stroke="Transparent"
                            VerticalAlignment="Bottom" 
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
						<Line
                            MouseDown="OnSizeWest"
                            x:Name="lnSizeWest"
                            Stroke="Transparent"
                            Cursor="SizeWE"
                            X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
						<Line
                            MouseDown="OnSizeEast"
                            x:Name="lnSizeEast"
                            Stroke="Transparent"
                            HorizontalAlignment="Right" 
                            Cursor="SizeWE"
                            X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
						<Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" />
						<Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right" />
						<Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
						<Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8"/>
						</Trigger>
						<Trigger Property="IsActive" Value="False">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource VS2012WindowBorderBrushInactive}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="{x:Type StatusBar}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
						<Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForeground}" />
						<Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrush}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
						<Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForegroundInactive}" />
						<Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrushInactive}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<Style TargetType="{x:Type Menu}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
						<Setter Property="Foreground" Value="{StaticResource VS2012WindowMenuForeground}" />
						<Setter Property="Background" Value="{StaticResource VS2012WindowMenuBackground}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
						<Setter Property="Foreground" Value="{StaticResource VS2012WindowMenuForeground}" />
						<Setter Property="Background" Value="{StaticResource VS2012WindowMenuBackground}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<Style TargetType="{x:Type MenuItem}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
						<Setter Property="Foreground" Value="{StaticResource VS2012WindowMenuForeground}" />
						<Setter Property="Background" Value="{StaticResource VS2012WindowMenuBackground}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
						<Setter Property="Foreground" Value="{StaticResource VS2012WindowMenuForeground}" />
						<Setter Property="Background" Value="{StaticResource VS2012WindowMenuBackground}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

		</Style.Resources>
	</Style>
</ResourceDictionary>