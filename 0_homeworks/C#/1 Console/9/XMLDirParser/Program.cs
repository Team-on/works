using System;
using System.IO;
using System.Xml;
using TeamCommander.Output;
using TeamCommander.Support;

namespace XMLDirParser {
	class Animation{
		byte curr;
		string[] animation;
		Output screen;

		public Animation() {
			screen = new Output(new Coord(), new Coord(Console.LargestWindowWidth - 2, Console.LargestWindowHeight -2));
			screen.Init();
			animation = new string[] {
				@"####################################################################################################
####################################################################################################
#############__________________________________________________________________________#############
##########________________________________________________________________________________##########
########____________________________________________________________________________________########
######_______________________________________________________________________________________#######
#####_____________________________#######______________________________________________________#####
####____________________________############____________________________________________________####
####__________________________###############___________________________________________________####
####_________________________#################__________________________________________________####
####_________________________#################__________________________________________________####
##___________________________#################____________________########_______________________###
##____________________________###############_____________________##################_____________###
##_____________________________##############_____________________##################_____________###
##________________________####__###########_______________________##################_____________###
##______________________########___#####__________________________###################____________###
##_____________________###########________________________________#####################__________###
##____________________############________________________________#################__##__________###
##___________________##############_______________________________________######_____###_________###
##_______##_________###############_______________________________________######_____###_________###
##_______###_______################______________________________###################__###________###
##_______####_____##################_____________________________###################__###________###
##_______####_____###################_____________###########___#####################_###________###
##_______#####___########################################################################________###
##_______#####__##################___#########################__###################__####________###
##_______#####__##################___################################################__##________###
##_______#####__##################__##################################################_##________###
##______######_###################___________#####_________________________####________###_______###
##______#####__###################____________###__________________________####________###_______###
##______######_###################___________####__________________________####________###_______###
##______######_###################___________####__________________________####________###_______###
##______######_#############################_####__________________________####________###_______###
##______###____#############################__###__________________________####________###_______###
##______###____#############################__###__________________________####________###_______###
##______###______###########################__###__________________________####________###_______###
##______###___#####################____#####__###__________________________####________###_______###
##______###########################____#####__###__________________________####________###_______###
##______#######_________##_____________#####__###__________________________####________###_______###
##____________________#####____________#####__###__________________________####________###_______###
##________________####_####____________#####_####__________________________####________###_______###
##_____________####____#####___________#####__###__________________________####________###_______###
##_____________#_______#####___________#####_####__________________________####________###_______###
##_____________________#####___________#####__###__________________________####________###_______###
##_____________________#####___________#####__###__________________________####________###_______###
##_____________________#####___________#####__###__________________________####________###_______###
##_____________###################_____#####_####__________________________####________###_______###
##_____________#########__#########____#####_#####_________________________####________###_______###
####____________##______##_____###_____#####__###__________________________####________###______####
####____________###____####____###______________________________________________________________####
####_____________#______##______#_______________________________________________________________####
####____________________________________________________________________________________________####
#####__________________________________________________________________________________________#####
######________________________________________________________________________________________######
########____________________________________________________________________________________########
#########_________________________________________________________________________________##########
############___________________________________________________________________________#############
###################______________________________________________________________###################
####################################################################################################",
				@"####################################################################################################
####################################################################################################
#############__________________________________________________________________________#############
##########________________________________________________________________________________##########
########____________________________________________________________________________________########
######________________________##_____________________________________________________________#######
#####_____________________##_####_##___________________________________________________________#####
####_______________________########______________________#______________________________________####
####_______________________########_____________________###_____________________________________####
####______________________##########_________________#########__________________________________####
####__________________________##_____________________########___________________________________####
##__________________________________________________##########____########_______________________###
##______________________________________________________###_______##################_____________###
##__________________________________________#####_________________##################_____________###
##_______________________________________###########______________##################_____________###
##_____________________________________##############_____________###################____________###
##____________________________________################____________####################___________###
##__________________________###########################___________#################__##__________###
##_______________________##############################___________________######_____###_________###
##_______###___________##############_################____________________######_____###_________###
##_______###_________################__###############___________###################__###________###
##_______####_______#################___############_____________###################__###________###
##_______####______###################____#########__########____####################_###________###
##_______#####____#######################################################################________###
##_______#####___####################_########################__###################__####________###
##_______#####___###################_################################################__##________###
##_______#####__######################################################################_##________###
##______######__####################_________#####_________________________####________###_______###
##______######_####################___________###__________________________####________###_______###
##______######_####################__________####__________________________####________###_______###
##______######_####################__________####__________________________####________###_______###
##______#####__#############################_####__________________________####________###_______###
##______###____#############################__###__________________________####________###_______###
##______###____#############################_####__________________________####________###_______###
##______###______###########################__###__________________________####________###_______###
##______###___#####################____#####_####__________________________####________###_______###
##______###########################____#####__###__________________________####________###_______###
##______#######_________##_____________#####__###__________________________####________###_______###
###___________________#####____________#####__###__________________________####________###_______###
##________________####_####____________#####_####__________________________####________###_______###
##_____________#####___#####___________#####__###__________________________####________###_______###
##_____________#_______#####___________#####_####__________________________####________###_______###
###____________________#####___________#####__###__________________________####________###_______###
##_____________________#####___________#####_####__________________________####________###_______###
###____________________#####___________#####__###__________________________####________###_______###
##_____________###################_____#####_#####_________________________####________###_______###
##_____________#########__########_____#####_#####_________________________####________###_______###
####____________##______##_____###_____#####__###__________________________####________###______####
####____________###____####____###______________________________________________________________####
####_____________#______##______#_______________________________________________________________####
####____________________________________________________________________________________________####
#####__________________________________________________________________________________________#####
######________________________________________________________________________________________######
########____________________________________________________________________________________########
#########_________________________________________________________________________________##########
############___________________________________________________________________________#############
###################______________________________________________________________###################
####################################################################################################",
				@"####################################################################################################
####################################################################################################
#############__________________________________________________________________________#############
##########________________________________________________________________________________##########
########____________________________________________________________________________________########
######_______________________#_______________________________________________________________#######
#####_____________________######_______________________________________________________________#####
####______________________######_________________________##_____________________________________####
####________________________##_________________________######___________________________________####
####___________________________________#######_________######___________________________________####
####________________________________#############________##_____________________________________####
##_________________________________###############________________########_______________________###
##________________________________#################_______________##################_____________###
##________________________________#################_______________##################_____________###
##________________________________#################_______________##################_____________###
##_________________________________###############________________###################____________###
##___________________________#####################________________#####################__________###
##________________________######################__________________#################_###__________###
##______________________##############__#####_____________________________######_____###_________###
##_______##___________################____________________________________######_____###_________###
##_______###_________#################___________________________###################__###________###
##_______####______##################____________________________###################__###________###
##_______####______###################____________###########____####################_###________###
##_______####_____#######################################################################________###
##_______#####___#############################################__###################__####________###
##_______#####__####################_################################################__##________###
##_______#####__######################################################################_###_______###
##______######__####################_________#####_________________________####________###_______###
##______######_#####################__________###__________________________####________###_______###
##______######_####################__________####__________________________####________###_______###
##______######_####################__________####__________________________####________###_______###
##______######_#############################_####__________________________####________###_______###
##______###____#############################__###__________________________####________###_______###
##______###____#############################__###__________________________####________###_______###
##______###______###########################__###__________________________####________###_______###
##______###___#####################____#####__###__________________________####________###_______###
##______###########################____#####__###__________________________####________###_______###
##______#######_________##_____________#####_####__________________________####________###_______###
###___________________#####____________#####__###__________________________####________###_______###
##________________####_####____________#####_####__________________________####________###_______###
##_____________#####___#####___________#####__###__________________________####________###_______###
##_____________#_______#####___________#####_####__________________________####________###_______###
###____________________#####___________#####__###__________________________####________###_______###
##_____________________#####___________#####_####__________________________####________###_______###
###____________________#####___________#####__###__________________________####________###_______###
##_____________###################_____#####_#####_________________________####________###_______###
##_____________#########__#########____#####_#####_________________________####________###_______###
####____________###_____##_____###_____#####__###__________________________####________###______####
####____________###____####____###______________________________________________________________####
####_____________#______##______#_______________________________________________________________####
####____________________________________________________________________________________________####
#####__________________________________________________________________________________________#####
######________________________________________________________________________________________######
########____________________________________________________________________________________########
#########_________________________________________________________________________________##########
############___________________________________________________________________________#############
###################______________________________________________________________###################
####################################################################################################",
			};
			curr = 0;
		}

		public void Step() {
			byte y = 0, x = 0;
			++curr;
			if (curr >= animation.Length)
				curr = 0;

			for (int i = 0; i < animation[curr].Length; ++i) {
				if (y >= screen.screenSize.y)
					break;
				if (animation[curr][i] != '\n') {
					if (y < screen.screenSize.y && x < screen.screenSize.x)
						screen[y, x++].sym = animation[curr][i];
					else
						++x;
				}
				else {
					++y;
					x = 0;
				}
			}
		}

		public void Print() {
			screen.Print();
		}

	}

	static class DirFileParserAnimation {
		static DateTime time;
		static Animation animation;

		static XmlDocument xml;
		static XmlAttribute attrib;
		static FileInfo finf;

		static void CallAnimation() {
			if (animation != null) {
				if (time.AddSeconds(1) < DateTime.Now) {
					animation.Step();
					animation.Print();
					time = DateTime.Now;
				}
			}
		}

		static public void Parse(string path, bool withAnim = false) {
			if (withAnim) {
				time = DateTime.Now.AddSeconds(-1);
				animation = new Animation();
				CallAnimation();
			}
			else
				animation = null;

			xml = new XmlDocument();

			XmlDeclaration decl = xml.CreateXmlDeclaration("1.0", "utf-8", "yes");
			xml.AppendChild(decl);

			XmlElement root = xml.CreateElement("root");

			DriveInfo[] drives = DriveInfo.GetDrives();
			foreach (DriveInfo drive in drives) {
				XmlElement disk = xml.CreateElement("disk");

				attrib = xml.CreateAttribute("driverName");
				attrib.Value = drive.Name;
				disk.Attributes.Append(attrib);

				attrib = xml.CreateAttribute("driveType");
				attrib.Value = drive.DriveType.ToString();
				disk.Attributes.Append(attrib);

				attrib = xml.CreateAttribute("isReady");
				attrib.Value = drive.IsReady.ToString();
				disk.Attributes.Append(attrib);

				if (drive.IsReady) {
					attrib = xml.CreateAttribute("driveFormat");
					attrib.Value = drive.DriveFormat.ToString();
					disk.Attributes.Append(attrib);

					attrib = xml.CreateAttribute("totalSize");
					attrib.Value = drive.TotalSize.ToString();
					disk.Attributes.Append(attrib);

					attrib = xml.CreateAttribute("freeSpace");
					attrib.Value = drive.TotalFreeSpace.ToString();
					disk.Attributes.Append(attrib);

					attrib = xml.CreateAttribute("availableFreeSpace");
					attrib.Value = drive.AvailableFreeSpace.ToString();
					disk.Attributes.Append(attrib);

					GetDirsAndFiles(drive.Name, disk);
				}

				root.AppendChild(disk);
			}

			xml.AppendChild(root);
			xml.Save(path);
		}

		static ulong GetDirsAndFiles(string dirName, XmlElement father) {
			//if (!Directory.Exists(dirName))
			//return 0;

			//if (dirName.Length > 20)
			//return 0;

			string[] dirs, files;
			try {
				dirs = Directory.GetDirectories(dirName);
				files = Directory.GetFiles(dirName);
			}
			catch (Exception exception) {
				attrib = xml.CreateAttribute("protected");
				attrib.Value = "yes";
				father.Attributes.Append(attrib);

				return 0;
			}

			XmlElement currElem;
			ulong sizeCurrDir = 0;
			foreach (string currFile in files) {
				finf = new FileInfo(currFile);
				currElem = xml.CreateElement("file");

				attrib = xml.CreateAttribute("name");
				attrib.Value = currFile.Substring(currFile.LastIndexOf('\\') + 1);
				currElem.Attributes.Append(attrib);

				attrib = xml.CreateAttribute("size");
				attrib.Value = finf.Length.ToString();
				currElem.Attributes.Append(attrib);

				sizeCurrDir += (ulong)finf.Length;

				father.AppendChild(currElem);
			}

			CallAnimation();

			foreach (string currDir in dirs) {
				currElem = xml.CreateElement("folder");

				attrib = xml.CreateAttribute("name");
				attrib.Value = currDir.Substring(currDir.LastIndexOf('\\') + 1);
				currElem.Attributes.Append(attrib);

				ulong sizeUpperDir = GetDirsAndFiles(currDir, currElem);
				sizeCurrDir += sizeUpperDir;

				attrib = xml.CreateAttribute("size");
				attrib.Value = sizeUpperDir.ToString();
				currElem.Attributes.Append(attrib);

				father.AppendChild(currElem);
			}

			return sizeCurrDir;
		}
	}

	static class DirFileParserOptimized {
		static XmlDocument xml;
		static XmlAttribute attrib;
		static FileInfo finf;

		static public void Parse(string path) {
			xml = new XmlDocument();

			XmlDeclaration decl = xml.CreateXmlDeclaration("1.0", "utf-8", "yes");
			xml.AppendChild(decl);

			XmlElement root = xml.CreateElement("root");

			DriveInfo[] drives = DriveInfo.GetDrives();
			foreach (DriveInfo drive in drives) {
				XmlElement disk = xml.CreateElement("disk");

				attrib = xml.CreateAttribute("driverName");
				attrib.Value = drive.Name;
				disk.Attributes.Append(attrib);

				attrib = xml.CreateAttribute("driveType");
				attrib.Value = drive.DriveType.ToString();
				disk.Attributes.Append(attrib);

				attrib = xml.CreateAttribute("isReady");
				attrib.Value = drive.IsReady.ToString();
				disk.Attributes.Append(attrib);

				if (drive.IsReady) {
					attrib = xml.CreateAttribute("driveFormat");
					attrib.Value = drive.DriveFormat.ToString();
					disk.Attributes.Append(attrib);

					attrib = xml.CreateAttribute("totalSize");
					attrib.Value = drive.TotalSize.ToString();
					disk.Attributes.Append(attrib);

					attrib = xml.CreateAttribute("freeSpace");
					attrib.Value = drive.TotalFreeSpace.ToString();
					disk.Attributes.Append(attrib);

					attrib = xml.CreateAttribute("availableFreeSpace");
					attrib.Value = drive.AvailableFreeSpace.ToString();
					disk.Attributes.Append(attrib);

					GetDirsAndFiles(drive.Name, disk);
				}

				root.AppendChild(disk);
			}

			xml.AppendChild(root);
			xml.Save(path);
		}

		static ulong GetDirsAndFiles(string dirName, XmlElement father) {
            //if (dirName.Length > 10)
            //    return 0;
			string[] dirs, files;
			try {
				dirs = Directory.GetDirectories(dirName);
				files = Directory.GetFiles(dirName);
			}
			catch (Exception exception) {
				attrib = xml.CreateAttribute("protected");
				attrib.Value = "yes";
				father.Attributes.Append(attrib);

				return 0;
			}

			XmlElement currElem;
			ulong sizeCurrDir = 0;
			foreach (string currFile in files) {
				finf = new FileInfo(currFile);
				currElem = xml.CreateElement("file");

				attrib = xml.CreateAttribute("name");
				attrib.Value = currFile.Substring(currFile.LastIndexOf('\\') + 1);
				currElem.Attributes.Append(attrib);

				attrib = xml.CreateAttribute("size");
				attrib.Value = finf.Length.ToString();
				currElem.Attributes.Append(attrib);

				sizeCurrDir += (ulong)finf.Length;

				father.AppendChild(currElem);
			}

			foreach (string currDir in dirs) {
				currElem = xml.CreateElement("folder");

				attrib = xml.CreateAttribute("name");
				attrib.Value = currDir.Substring(currDir.LastIndexOf('\\') + 1);
				currElem.Attributes.Append(attrib);

				ulong sizeUpperDir = GetDirsAndFiles(currDir, currElem);
				sizeCurrDir += sizeUpperDir;

				attrib = xml.CreateAttribute("size");
				attrib.Value = sizeUpperDir.ToString();
				currElem.Attributes.Append(attrib);

				father.AppendChild(currElem);
			}

			return sizeCurrDir;
		}
	}

	class Program {
		static void Main(string[] args) {
			DateTime start = DateTime.Now;
			//DirFileParserAnimation.Parse(@"D:\test.xml", true);
			//Console.WriteLine(DateTime.Now - start);

			//start = DateTime.Now;
			DirFileParserOptimized.Parse(@"D:\test.xml");
			Console.WriteLine(DateTime.Now - start);
		}
	}
}