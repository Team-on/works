//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.BankServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankServiceReference.IBank", CallbackContract=typeof(Client.BankServiceReference.IBankCallback))]
    public interface IBank {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/CreateAccount", ReplyAction="http://tempuri.org/IBank/CreateAccountResponse")]
        int CreateAccount(int m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/CreateAccount", ReplyAction="http://tempuri.org/IBank/CreateAccountResponse")]
        System.Threading.Tasks.Task<int> CreateAccountAsync(int m);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBank/Withdraw")]
        void Withdraw(int m, int number);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBank/Withdraw")]
        System.Threading.Tasks.Task WithdrawAsync(int m, int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/GetAccountInfo", ReplyAction="http://tempuri.org/IBank/GetAccountInfoResponse")]
        int GetAccountInfo(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBank/GetAccountInfo", ReplyAction="http://tempuri.org/IBank/GetAccountInfoResponse")]
        System.Threading.Tasks.Task<int> GetAccountInfoAsync(int number);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBank/Balance")]
        void Balance(int m);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankChannel : Client.BankServiceReference.IBank, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankClient : System.ServiceModel.DuplexClientBase<Client.BankServiceReference.IBank>, Client.BankServiceReference.IBank {
        
        public BankClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public BankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public BankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BankClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int CreateAccount(int m) {
            return base.Channel.CreateAccount(m);
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountAsync(int m) {
            return base.Channel.CreateAccountAsync(m);
        }
        
        public void Withdraw(int m, int number) {
            base.Channel.Withdraw(m, number);
        }
        
        public System.Threading.Tasks.Task WithdrawAsync(int m, int number) {
            return base.Channel.WithdrawAsync(m, number);
        }
        
        public int GetAccountInfo(int number) {
            return base.Channel.GetAccountInfo(number);
        }
        
        public System.Threading.Tasks.Task<int> GetAccountInfoAsync(int number) {
            return base.Channel.GetAccountInfoAsync(number);
        }
    }
}
